<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CKolumbus&#39; Blog</title>
    <link>https://ckolumbus.github.io/</link>
    <description>Recent content on CKolumbus&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Feb 2018 19:14:10 +0100</lastBuildDate>
    
	<atom:link href="https://ckolumbus.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang Dependency Injection With karlkfi/inject</title>
      <link>https://ckolumbus.github.io/post/2018/02/golang-dependency-injection-with-karlkfi-inject/</link>
      <pubDate>Sun, 18 Feb 2018 19:14:10 +0100</pubDate>
      
      <guid>https://ckolumbus.github.io/post/2018/02/golang-dependency-injection-with-karlkfi-inject/</guid>
      <description>&lt;p&gt;While investigating the pros and cons of manual ctor and IoC based dependency injection
in &lt;a href=&#34;http://golang.com&#34;&gt;go&lt;/a&gt; I looked at several IoC solutions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/karlkfi/inject&#34;&gt;karlkfi/inject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebookgo/inject&#34;&gt;facebookgo/inject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magic003/alice&#34;&gt;magic003/alice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I was astonished by &lt;a href=&#34;https://github.com/karlkfi/inject&#34;&gt;karlkfi/inject&lt;/a&gt; how I was
able to switch to an IoC with &lt;strong&gt;NO CHANGES WHASOVER&lt;/strong&gt; on my ctor DI based classes.&lt;/p&gt;

&lt;p&gt;Check out the small changes yourself below or on &lt;a href=&#34;https://github.com/ckolumbus/golangRestApiExampleWithDependencyInjection/commit/0c43952092e1f313e1a73a0c3cb938fed595e386#diff-77339446d6d7a72280ed646533aa22ae&#34;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Blog Switch From Nikola to Hugo</title>
      <link>https://ckolumbus.github.io/post/2018/02/blog-switch-from-nikola-to-hugo/</link>
      <pubDate>Fri, 16 Feb 2018 17:33:01 +0100</pubDate>
      
      <guid>https://ckolumbus.github.io/post/2018/02/blog-switch-from-nikola-to-hugo/</guid>
      <description>After starting to look more int GO programming I also inteded to revive my outdated blog on github. Although I&amp;rsquo;m veteran Pythonista I felt a little bit stuck with the complexity and the missing reactive designs of Nikola with which I started my blog.
Digging more into the Go ecosystem I stumpled across Hugo and played around for a night, and with my limited number of existing posts swichting was easily done.</description>
    </item>
    
    <item>
      <title>Problematic handling of array configuration items in ASP.Net core</title>
      <link>https://ckolumbus.github.io/post/2018/02/problematic-handling-of-array-configuration-items-in-aspnet-core/</link>
      <pubDate>Sun, 11 Feb 2018 17:07:28 +0100</pubDate>
      
      <guid>https://ckolumbus.github.io/post/2018/02/problematic-handling-of-array-configuration-items-in-aspnet-core/</guid>
      <description>This post refers to the handling of array configuration items as they exist in ASP.Net core Configuration since 1.0 up to now (RT 2.0.5, SDK 2.1.4).
Example on how ASP.Net Core handles overwriting loaded array configuration when the later read config files contain less array entries than before.
Arrays are not complete replaced but only the first n entries that are actully given in the later config files are being replaced, leaving</description>
    </item>
    
    <item>
      <title>Backporting Qt App from Python3 to Python2 (SIP API Versions)</title>
      <link>https://ckolumbus.github.io/post/2014/04/backporting-qt-app-from-python3-to-python2-sip-api-versions/</link>
      <pubDate>Wed, 23 Apr 2014 19:21:19 +0100</pubDate>
      
      <guid>https://ckolumbus.github.io/post/2014/04/backporting-qt-app-from-python3-to-python2-sip-api-versions/</guid>
      <description>The issue came up with trying to integrate parts of an existing Python3/Qt app (mikidown) into a Python2/Qt app. After minor standard issues, like exceptions and print functions, many strange errors with respect to QString and QVariant handling showed up.
Searching for solution considering the different unicode string handling between Py2 &amp;amp; Py3 did not give any answers: the solution lay in the different PyQt4 API versions for the different Python versions.</description>
    </item>
    
    <item>
      <title>First GitHub posting</title>
      <link>https://ckolumbus.github.io/post/2014/04/first-github-posting/</link>
      <pubDate>Mon, 21 Apr 2014 19:21:06 +0100</pubDate>
      
      <guid>https://ckolumbus.github.io/post/2014/04/first-github-posting/</guid>
      <description>This is my first post on GitHub pages. I will (hopefully) continue to post my development related activies, loosly associated with my repositories.
Chris</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://ckolumbus.github.io/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ckolumbus.github.io/license/</guid>
      <description>All information on this site is published under the CC-BY-4.0 License if not stated explicitely otherwise.
Please check the CreativeCommons Site on how to comply with this license.</description>
    </item>
    
  </channel>
</rss>